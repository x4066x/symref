# symref - AI Context Tool

## Challenges & Solutions
```bash
# 1. Limited Visibility
symref refs func -d ./src                    # Full view
symref refs "main,*" --include "src/*.ts"    # Entry points
symref refs "*Service*" -d ./src             # Dependencies

# 2. Implementation Gaps
symref refs IInterface -d ./src              # Find impls
symref refs changed -d ./src                 # Track updates
symref dead src/file.ts                      # Find dead code

# 3. Reference Check
symref refs symbol -d ./src                  # All refs
symref refs "*pattern*" --include "src/*.ts" # Similar code
symref refs ServiceA,ServiceB -d ./src       # Dependencies
```

## Quick Start
```bash
# Install
npm install -g symref

# Find Refs
symref refs MyClass                          # Single
symref refs func,IFace                       # Multiple

# Dead Code
symref dead src/comp.ts
```

## Options
```bash
-d <path>      # Base dir
-p <path>      # tsconfig
--include      # Include files
--exclude      # Exclude files
```

## Output
```
✓ Refs: file.ts:line (context)
⚠ None: Consider removal
```

## Best Practice
1. Pre-change: Check refs & usage
2. Cleanup: Remove unused, update docs

## Core Files
@[staticCodeChecker.ts] - Analyzer
@[cli.ts] - CLI
@[README.md] - Docs
